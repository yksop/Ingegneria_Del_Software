const passport = require("passport");
const GoogleStrategy = require("passport-google-oauth20").Strategy;
const User = require("../app/models/User");

passport.serializeUser((user, done) => {
  done(null, user);
});

passport.deserializeUser(function (user, done) {
  done(null, user);
});

passport.use(
  new GoogleStrategy(
    {
      clientID: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      callbackURL: process.env.GOOGLE_CALLBACK_URL,
    },
    function (accessToken, refreshToken, profile, done) {
      User.findOne({ "oauth.googleId": profile.id })
        .then((existingUser) => {
          if (existingUser) {
            return done(null, existingUser);
          } else {
            var newUser = new User({
              name: profile.givenName,
              surname: profile.familyName,
              email: profile.emails[0].value,
              username: profile.displayName,
              oauth: {
                googleId: profile.id,
                displayName: profile.displayName,
                firstName: profile.name.givenName,
                lastName: profile.name.familyName,
                email: profile.emails[0].value,
              },
            });
            newUser
              .save()
              .then((newUser) => {
                return done(null, newUser);
              })
              .catch((err) => {
                return done(err);
              });
          }
        })
        .catch((err) => {
          return done(err);
        });
    }
  )
);

module.exports.isLoggedIn = function (req, res, next) {
  req.user ? next() : res.sendStatus(401);
};

module.exports.passport = passport;
